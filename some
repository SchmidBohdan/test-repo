class UsersController < ApplicationController
  include DeviseTokenAuth::Concerns::SetUserByToken
  include Swagger::Docs::Methods
  include Swagger::Blocks
  before_action :configure_permitted_parameters, if: :devise_controller?

  protected

  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(
        :sign_up,
        keys: [
            :email,
            :password,
            :password_confirmation,
            :first_name,
            :last_name,
            :nickname

        ]
    )
  end

  swagger_path '/users/{id}' do
    operation :get do
      key :summary, 'Find User by ID'
      key :description, 'Returns a single pet if the user has access'
      key :operationId, 'findUserById'
      key :tags, [
          'user'
      ]
      parameter do
        key :name, :id
        key :in, :path
        key :description, 'ID of user to fetch'
        key :required, true
        key :type, :integer
        key :format, :int64
      end
      response 200 do
        key :description, 'user response'
        schema do
          key :'$ref', :Pet
        end
      end
      response :default do
        key :description, 'unexpected error'
        schema do
          key :'$ref', :ErrorModel
        end
      end
    end
  end
  swagger_path '/users' do
    operation :get do
      key :summary, 'All Users'
      key :description, 'Returns all pets from the system that the user has access to'
      key :operationId, 'findUsers'
      key :produces, [
          'application/json',
          'text/html',
      ]
      key :tags, [
          'pet'
      ]
      parameter do
        key :name, :tags
        key :in, :query
        key :description, 'tags to filter by'
        key :required, false
        key :type, :array
        items do
          key :type, :string
        end
        key :collectionFormat, :csv
      end
      parameter do
        key :name, :limit
        key :in, :query
        key :description, 'maximum number of results to return'
        key :required, false
        key :type, :integer
        key :format, :int32
      end
      response 200 do
        key :description, 'User response'
        schema do
          key :type, :array
          items do
            key :'$ref', :Pet
          end
        end
      end
      response :default do
        key :description, 'unexpected error'
        schema do
          key :'$ref', :ErrorModel
        end
      end
    end
    operation :post do
      key :description, 'Creates a new user in the store.  Duplicates are allowed'
      key :operationId, 'addUser'
      key :produces, [
          'application/json'
      ]
      key :tags, [
          'pet'
      ]
      parameter do
        key :name, :User
        key :in, :body
        key :description, 'User to add to the store'
        key :required, true
        schema do
          key :'$ref', :PetInput
        end
      end
      response 200 do
        key :description, 'User response'
        schema do
          key :'$ref', :User
        end
      end
      response :default do
        key :description, 'unexpected error'
        schema do
          key :'$ref', :ErrorModel
        end
      end
    end
  end
end


this is my changed text 
